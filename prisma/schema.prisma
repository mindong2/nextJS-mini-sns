// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id Int @id @default(autoincrement())
  name String //require
  email String
  password String
  // 암호화 초기화 벡터
  iv String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  posts Post[]
  tokens Token[]
  favorites Favorite[]
  comments Comment[]
}

model Token {
  id Int @id @default(autoincrement())
  payload String @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  @@index(userId)
  userId Int
}

model Post {
  id Int @id @default(autoincrement())
  title String
  post String
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  @@index([userId])
  userId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  comments Comment[]
  Favorites Favorite[]
}

model Favorite  {
  id Int @id @default(autoincrement())
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  @@index([userId])
  userId Int
  post Post @relation(fields: [postId], references: [id], onDelete: Cascade)
  @@index([postId])
  postId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Comment {
  id Int @id @default(autoincrement())
  comment String
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  @@index([userId])
  userId Int
  post Post @relation(fields: [postId], references: [id], onDelete: Cascade)
  @@index([postId])
  postId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt 
}